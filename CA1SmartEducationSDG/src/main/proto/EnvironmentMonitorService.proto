syntax = "proto3";

option java_multiple_files = true;
option java_package = "generated.environment.monitor";
option java_outer_classname = "EnvironmentMonitorServiceImpl";

package EnvironmentMonitorService;

// The Environment Monitor Service allows real-time bidirectional communication
// between classroom sensors and server for adjusting classroom conditions.
service EnvironmentMonitorService {

  // Bidirectional streaming RPC: Sensors stream data and receive environment adjustment commands
  rpc MonitorEnvironment (stream SensorData) returns (stream AdjustmentCommand) {}

  // Unary RPC: Check current environment status based on latest sensor values
  rpc GetEnvironmentStatus (SensorData) returns (EnvironmentStatus) {}
}

// Message sent from sensors with current environmental readings
message SensorData {
  float temperature = 1;     // Classroom temperature in Â°C (e.g., 29.5)
  float light_level = 2;     // Light intensity in lumens
  string timestamp = 3;      // ISO 8601 timestamp (e.g., "2025-07-01T17:05:00")
}

// Message sent from server to control devices based on environment conditions
message AdjustmentCommand {
  string action = 1;         // Suggested adjustment (e.g., "Turn on Heater")
  string target_device = 2;  // Device to receive the command (e.g., "HeaterUnit1")
}

// Message returned in response to a single sensor data input
message EnvironmentStatus {
  string summary = 1;        // Overall evaluation (e.g., "Too hot, light is sufficient")
  repeated string suggestions = 2; // Optional: List of action suggestions
}
